{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maxim\\\\Dropbox\\\\\\u041A\\u043E\\u043D\\u0441\\u043F\\u0435\\u043A\\u0442\\u044B\\\\\\u0420\\u041A\\u041F\\u041E\\\\\\u041B\\u0430\\u0431\\u044B\\\\\\u041B\\u0430\\u0431\\u04304\\\\todo\\\\src\\\\pages\\\\DndPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TodoItem from '../components/TodoItem';\nimport SwitchButton from '../components/SwitchButton';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DndPage() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState('');\n  const [filter, setFilter] = useState('all'); // all, completed, incomplete\n\n  const handleAddTask = () => {\n    if (task.trim()) {\n      setTasks([...tasks, {\n        id: String(tasks.length + 1),\n        text: task,\n        completed: false\n      }]);\n      setTask('');\n    }\n  };\n  const handleFilterChange = filterType => {\n    setFilter(filterType);\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') {\n      return task.completed;\n    } else if (filter === 'incomplete') {\n      return !task.completed;\n    }\n    return true;\n  });\n  const handleOnDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n\n    // If there's no destination (e.g., dropped outside the list), do nothing\n    if (!destination) return;\n\n    // Reorder the tasks based on drag result\n    const reorderedTasks = Array.from(tasks);\n    const [removed] = reorderedTasks.splice(source.index, 1);\n    reorderedTasks.splice(destination.index, 0, removed);\n    setTasks(reorderedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n      path: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleAddTask();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: task,\n          onChange: e => setTask(e.target.value),\n          placeholder: \"Add a new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTask,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleOnDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"To Do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"todo\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [todoTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: task.id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(TodoItem, {\n                    task: task,\n                    index: index,\n                    tasks: tasks,\n                    setTasks: setTasks\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this)\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"done\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [doneTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: task.id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(TodoItem, {\n                    task: task,\n                    index: index,\n                    tasks: tasks,\n                    setTasks: setTasks\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this)\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Blocked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"blocked\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [blockedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: task.id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(TodoItem, {\n                    task: task,\n                    index: index,\n                    tasks: tasks,\n                    setTasks: setTasks\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 23\n                }, this)\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(DndPage, \"v3jcMHCqpcuItpiO97CqTDGRnoE=\");\n_c = DndPage;\nexport default DndPage;\nvar _c;\n$RefreshReg$(_c, \"DndPage\");","map":{"version":3,"names":["React","useState","TodoItem","SwitchButton","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","DndPage","_s","tasks","setTasks","task","setTask","filter","setFilter","handleAddTask","trim","id","String","length","text","completed","handleFilterChange","filterType","filteredTasks","handleOnDragEnd","result","source","destination","reorderedTasks","Array","from","removed","splice","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","onClick","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","todoTasks","map","draggableId","draggableProps","dragHandleProps","doneTasks","blockedTasks","_c","$RefreshReg$"],"sources":["C:/Users/Maxim/Dropbox/Конспекты/РКПО/Лабы/Лаба4/todo/src/pages/DndPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TodoItem from '../components/TodoItem';\r\nimport SwitchButton from '../components/SwitchButton';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nfunction DndPage() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [task, setTask] = useState('');\r\n  const [filter, setFilter] = useState('all'); // all, completed, incomplete\r\n\r\n  const handleAddTask = () => {\r\n    if (task.trim()) {\r\n      setTasks([...tasks, { id: String(tasks.length+1), text: task, completed: false }]);\r\n      setTask('');\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (filterType) => {\r\n    setFilter(filterType);\r\n  };\r\n\r\n  const filteredTasks = tasks.filter((task) => {\r\n    if (filter === 'completed') {\r\n      return task.completed;\r\n    } else if (filter === 'incomplete') {\r\n      return !task.completed;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  const handleOnDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n\r\n    // If there's no destination (e.g., dropped outside the list), do nothing\r\n    if (!destination) return;\r\n\r\n    // Reorder the tasks based on drag result\r\n    const reorderedTasks = Array.from(tasks);\r\n    const [removed] = reorderedTasks.splice(source.index, 1);\r\n    reorderedTasks.splice(destination.index, 0, removed);\r\n\r\n    setTasks(reorderedTasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <h1>To-Do List</h1>\r\n    <SwitchButton path=\"/\" />\r\n    <div className=\"task-input\">\r\n      <form onSubmit={(e) => { e.preventDefault(); handleAddTask(); }}>\r\n        <input\r\n          type=\"text\"\r\n          value={task}\r\n          onChange={(e) => setTask(e.target.value)}\r\n          placeholder=\"Add a new task\"\r\n        />\r\n        <button onClick={handleAddTask}>Add</button>\r\n      </form>\r\n    </div>\r\n\r\n    <div className=\"columns\">\r\n      <DragDropContext onDragEnd={handleOnDragEnd}>\r\n        {/* To Do Column */}\r\n        <div className=\"column\">\r\n          <h2>To Do</h2>\r\n          <Droppable droppableId=\"todo\">\r\n            {(provided) => (\r\n              <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n                {todoTasks.map((task, index) => (\r\n                  <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                    {(provided) => (\r\n                      <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <TodoItem\r\n                          task={task}\r\n                          index={index}\r\n                          tasks={tasks}\r\n                          setTasks={setTasks}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </ul>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n\r\n        {/* Done Column */}\r\n        <div className=\"column\">\r\n          <h2>Done</h2>\r\n          <Droppable droppableId=\"done\">\r\n            {(provided) => (\r\n              <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n                {doneTasks.map((task, index) => (\r\n                  <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                    {(provided) => (\r\n                      <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <TodoItem\r\n                          task={task}\r\n                          index={index}\r\n                          tasks={tasks}\r\n                          setTasks={setTasks}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </ul>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n\r\n        {/* Blocked Column */}\r\n        <div className=\"column\">\r\n          <h2>Blocked</h2>\r\n          <Droppable droppableId=\"blocked\">\r\n            {(provided) => (\r\n              <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n                {blockedTasks.map((task, index) => (\r\n                  <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                    {(provided) => (\r\n                      <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <TodoItem\r\n                          task={task}\r\n                          index={index}\r\n                          tasks={tasks}\r\n                          setTasks={setTasks}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </ul>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </DragDropContext>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default DndPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}