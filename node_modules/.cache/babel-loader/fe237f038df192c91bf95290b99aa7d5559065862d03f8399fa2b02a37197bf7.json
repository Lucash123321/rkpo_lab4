{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maxim\\\\Dropbox\\\\\\u041A\\u043E\\u043D\\u0441\\u043F\\u0435\\u043A\\u0442\\u044B\\\\\\u0420\\u041A\\u041F\\u041E\\\\\\u041B\\u0430\\u0431\\u044B\\\\\\u041B\\u0430\\u0431\\u04304\\\\todo\\\\src\\\\pages\\\\DndPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TodoItem from '../components/TodoItem';\nimport SwitchButton from '../components/SwitchButton';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DndPage() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState('');\n  const handleAddTask = () => {\n    if (task.trim()) {\n      setTasks([...tasks, {\n        id: String(tasks.length + 1),\n        text: task,\n        status: 'todo'\n      }]);\n      setTask('');\n    }\n  };\n  const handleOnDragEnd = result => {\n    console.log(result);\n    const {\n      source,\n      destination\n    } = result;\n\n    // If there's no destination (e.g., dropped outside the list), do nothing\n    if (!destination) return;\n\n    // If the source and destination are the same, do nothing\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n    const updatedTasks = Array.from(tasks);\n    const [movedTask] = updatedTasks.splice(source.index, 1);\n\n    // Update the task's status based on the column it's dropped into\n    movedTask.status = destination.droppableId;\n    updatedTasks.splice(destination.index, 0, movedTask);\n    setTasks(updatedTasks);\n  };\n\n  // Filter tasks based on their status for each column\n  const todoTasks = tasks.filter(task => task.status === 'todo');\n  const doneTasks = tasks.filter(task => task.status === 'done');\n  const blockedTasks = tasks.filter(task => task.status === 'blocked');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n      path: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleAddTask();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: task,\n          onChange: e => setTask(e.target.value),\n          placeholder: \"Add a new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTask,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleOnDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"To Do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"todo\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [todoTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: task.id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(TodoItem, {\n                    task: task,\n                    index: index,\n                    tasks: tasks,\n                    setTasks: setTasks\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 25\n                }, this)\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"done\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [doneTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: task.id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(TodoItem, {\n                    task: task,\n                    index: index,\n                    tasks: tasks,\n                    setTasks: setTasks\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 25\n                }, this)\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Blocked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"blocked\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [blockedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: task.id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(TodoItem, {\n                    task: task,\n                    index: index,\n                    tasks: tasks,\n                    setTasks: setTasks\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 25\n                }, this)\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(DndPage, \"pA78OmIk8vrGIGNP3RwLyEUg+ME=\");\n_c = DndPage;\nexport default DndPage;\nvar _c;\n$RefreshReg$(_c, \"DndPage\");","map":{"version":3,"names":["React","useState","TodoItem","SwitchButton","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","DndPage","_s","tasks","setTasks","task","setTask","handleAddTask","trim","id","String","length","text","status","handleOnDragEnd","result","console","log","source","destination","droppableId","index","updatedTasks","Array","from","movedTask","splice","todoTasks","filter","doneTasks","blockedTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","onClick","onDragEnd","provided","droppableProps","ref","innerRef","map","draggableId","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["C:/Users/Maxim/Dropbox/Конспекты/РКПО/Лабы/Лаба4/todo/src/pages/DndPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TodoItem from '../components/TodoItem';\r\nimport SwitchButton from '../components/SwitchButton';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nfunction DndPage() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [task, setTask] = useState('');\r\n\r\n  const handleAddTask = () => {\r\n    if (task.trim()) {\r\n      setTasks([...tasks, { id: String(tasks.length + 1), text: task, status: 'todo' }]);\r\n      setTask('');\r\n    }\r\n  };\r\n\r\n  const handleOnDragEnd = (result) => {\r\n    console.log(result)\r\n    const { source, destination } = result;\r\n\r\n    // If there's no destination (e.g., dropped outside the list), do nothing\r\n    if (!destination) return;\r\n\r\n    // If the source and destination are the same, do nothing\r\n    if (source.droppableId === destination.droppableId && source.index === destination.index) return;\r\n\r\n    const updatedTasks = Array.from(tasks);\r\n    const [movedTask] = updatedTasks.splice(source.index, 1);\r\n\r\n    // Update the task's status based on the column it's dropped into\r\n    movedTask.status = destination.droppableId;\r\n    updatedTasks.splice(destination.index, 0, movedTask);\r\n\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n\r\n  // Filter tasks based on their status for each column\r\n  const todoTasks = tasks.filter(task => task.status === 'todo');\r\n  const doneTasks = tasks.filter(task => task.status === 'done');\r\n  const blockedTasks = tasks.filter(task => task.status === 'blocked');\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>To-Do List</h1>\r\n      <SwitchButton path=\"/\" />\r\n      <div className=\"task-input\">\r\n        <form onSubmit={(e) => { e.preventDefault(); handleAddTask(); }}>\r\n          <input\r\n            type=\"text\"\r\n            value={task}\r\n            onChange={(e) => setTask(e.target.value)}\r\n            placeholder=\"Add a new task\"\r\n          />\r\n          <button onClick={handleAddTask}>Add</button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"columns\">\r\n        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n          {/* To Do Column */}\r\n          <div className=\"column\">\r\n            <h2>To Do</h2>\r\n            <Droppable droppableId=\"todo\">\r\n              {(provided) => (\r\n                <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {todoTasks.map((task, index) => (\r\n                    <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                      {(provided) => (\r\n                        <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                          <TodoItem\r\n                            task={task}\r\n                            index={index}\r\n                            tasks={tasks}\r\n                            setTasks={setTasks}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </ul>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n\r\n          {/* Done Column */}\r\n          <div className=\"column\">\r\n            <h2>Done</h2>\r\n            <Droppable droppableId=\"done\">\r\n              {(provided) => (\r\n                <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {doneTasks.map((task, index) => (\r\n                    <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                      {(provided) => (\r\n                        <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                          <TodoItem\r\n                            task={task}\r\n                            index={index}\r\n                            tasks={tasks}\r\n                            setTasks={setTasks}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </ul>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n\r\n          {/* Blocked Column */}\r\n          <div className=\"column\">\r\n            <h2>Blocked</h2>\r\n            <Droppable droppableId=\"blocked\">\r\n              {(provided) => (\r\n                <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {blockedTasks.map((task, index) => (\r\n                    <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                      {(provided) => (\r\n                        <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                          <TodoItem\r\n                            task={task}\r\n                            index={index}\r\n                            tasks={tasks}\r\n                            setTasks={setTasks}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </ul>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DndPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}