{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maxim\\\\Dropbox\\\\\\u041A\\u043E\\u043D\\u0441\\u043F\\u0435\\u043A\\u0442\\u044B\\\\\\u0420\\u041A\\u041F\\u041E\\\\\\u041B\\u0430\\u0431\\u044B\\\\\\u041B\\u0430\\u0431\\u04304\\\\todo\\\\src\\\\pages\\\\DndPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoItemDnd from '../components/TodoItemDnd';\nimport SwitchButton from '../components/SwitchButton';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DndPage() {\n  _s();\n  const [task, setTask] = useState('');\n  const [columns, setColumns] = useState({\n    todo: {\n      name: 'To Do',\n      items: [{\n        id: '1',\n        text: 'First task'\n      }, {\n        id: '2',\n        text: 'Second task'\n      }]\n    },\n    inProgress: {\n      name: 'In Progress',\n      items: []\n    },\n    done: {\n      name: 'Done',\n      items: []\n    }\n  });\n  const handleAddTask = () => {\n    if (!task) return;\n    const newTaskItem = {\n      id: Date.now(),\n      text: task\n    };\n    const newTodoItems = [...columns.todo.items, newTaskItem];\n    setColumns({\n      ...columns,\n      todo: {\n        ...columns.todo,\n        items: newTodoItems\n      }\n    });\n    setTask(\"\");\n  };\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    if (source.droppableId === destination.droppableId) {\n      sourceItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        }\n      });\n    } else {\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n    }\n  };\n  useEffect(() => {\n    console.log(columns);\n  }, [columns]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n      path: \"dnd/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleAddTask();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: task,\n          onChange: e => setTask(e.target.value),\n          placeholder: \"Add a new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTask,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"To Do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"todo\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [columns.todo.items.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: task.text,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(TodoItemDnd, {\n                    task: task,\n                    index: index\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this)\n              }, task.text, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"inProgress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"inProgress\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [columns.inProgress.items.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: task.text,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(TodoItemDnd, {\n                    task: task,\n                    index: index\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this)\n              }, task.text, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"inProgress\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [columns.inProgress.items.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: task.text,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(TodoItemDnd, {\n                    task: task,\n                    index: index\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 25\n                }, this)\n              }, task.text, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n\n  // return (\n  //   <div className=\"App\">\n  //     <h1>To-Do List</h1>\n  //     <SwitchButton path=\"/\" />\n  //     <div className=\"task-input\">\n  //       <form onSubmit={(e) => { e.preventDefault(); handleAddTask(); }}>\n  //         <input\n  //           type=\"text\"\n  //           value={task}\n  //           onChange={(e) => setTask(e.target.value)}\n  //           placeholder=\"Add a new task\"\n  //         />\n  //         <button onClick={handleAddTask}>Add</button>\n  //       </form>\n  //     </div>\n\n  //     <div className=\"columns\">\n  //       <DragDropContext onDragEnd={onDragEnd}>\n  //         <div className=\"column\">\n  //           <h2>To Do</h2>\n  //           <Droppable droppableId=\"todo\">\n  //             {(provided) => (\n  //               <ul {...provided.droppableProps} ref={provided.innerRef}>\n  //                 {todoTasks.map((task, index) => (\n  //                   <Draggable key={task.text} draggableId={task.text} index={index}>\n  //                     {(provided) => (\n  //                       <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n  //                         <TodoItem\n  //                           task={task}\n  //                           index={index}\n  //                           tasks={tasks}\n  //                           setTasks={setTasks}\n  //                         />\n  //                       </div>\n  //                     )}\n  //                   </Draggable>\n  //                 ))}\n  //                 {provided.placeholder}\n  //               </ul>\n  //             )}\n  //           </Droppable>\n  //         </div>\n\n  //         {/* Done Column */}\n  //         <div className=\"column\">\n  //           <h2>inProgress</h2>\n  //           <Droppable droppableId=\"inProgress\">\n  //             {(provided) => (\n  //               <ul {...provided.droppableProps} ref={provided.innerRef}>\n  //                 {doneTasks.map((task, index) => (\n  //                   <Draggable key={task.text} draggableId={task.text} index={index}>\n  //                     {(provided) => (\n  //                       <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n  //                         <TodoItem\n  //                           task={task}\n  //                           index={index}\n  //                           tasks={tasks}\n  //                           setTasks={setTasks}\n  //                         />\n  //                       </div>\n  //                     )}\n  //                   </Draggable>\n  //                 ))}\n  //                 {provided.placeholder}\n  //               </ul>\n  //             )}\n  //           </Droppable>\n  //         </div>\n\n  //         {/* Blocked Column\n  //         <div className=\"column\">\n  //           <h2>Blocked</h2>\n  //           <Droppable droppableId=\"blocked\">\n  //             {(provided) => (\n  //               <ul {...provided.droppableProps} ref={provided.innerRef}>\n  //                 {blockedTasks.map((task, index) => (\n  //                   <Draggable key={task.text} draggableId={task.text} index={index}>\n  //                     {(provided) => (\n  //                       <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n  //                         <TodoItem\n  //                           task={task}\n  //                           index={index}\n  //                           tasks={tasks}\n  //                           setTasks={setTasks}\n  //                         />\n  //                       </div>\n  //                     )}\n  //                   </Draggable>\n  //                 ))}\n  //                 {provided.placeholder}\n  //               </ul>\n  //             )}\n  //           </Droppable>\n  //         </div> */}\n  //       </DragDropContext>\n  //     </div>\n  //   </div>\n  // );\n}\n_s(DndPage, \"3ETVF149/OWyeSsDfi8uGIXiEtg=\");\n_c = DndPage;\nexport default DndPage;\nvar _c;\n$RefreshReg$(_c, \"DndPage\");","map":{"version":3,"names":["React","useState","useEffect","TodoItemDnd","SwitchButton","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","DndPage","_s","task","setTask","columns","setColumns","todo","name","items","id","text","inProgress","done","handleAddTask","newTaskItem","Date","now","newTodoItems","onDragEnd","result","source","destination","sourceColumn","droppableId","destColumn","sourceItems","destItems","removed","splice","index","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","onClick","provided","droppableProps","ref","innerRef","map","draggableId","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["C:/Users/Maxim/Dropbox/Конспекты/РКПО/Лабы/Лаба4/todo/src/pages/DndPage.js"],"sourcesContent":["import React, { useState, useEffect  } from 'react';\r\nimport TodoItemDnd from '../components/TodoItemDnd';\r\nimport SwitchButton from '../components/SwitchButton';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nfunction DndPage() {\r\n  const [task, setTask] = useState('');\r\n  const [columns, setColumns] = useState({\r\n    todo: {\r\n      name: 'To Do',\r\n      items: [\r\n      { id: '1', text: 'First task' },\r\n      { id: '2', text: 'Second task' },\r\n      ],\r\n    },\r\n    inProgress: {\r\n      name: 'In Progress',\r\n      items: [],\r\n    },\r\n    done: {\r\n      name: 'Done',\r\n      items: [],\r\n    },\r\n    });\r\n\r\n\r\n  const handleAddTask = () => {\r\n    if (!task) return; \r\n\r\n    const newTaskItem = {\r\n      id: Date.now(),\r\n      text: task,\r\n      };\r\n\r\n\r\n    const newTodoItems = [...columns.todo.items, newTaskItem]\r\n\r\n    setColumns({\r\n      ...columns,\r\n      todo: {\r\n        ...columns.todo,\r\n        items: newTodoItems\r\n      }\r\n\r\n    });\r\n\r\n    setTask(\"\");\r\n  };\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n    const sourceColumn = columns[source.droppableId];\r\n    const destColumn = columns[destination.droppableId];\r\n    const sourceItems = [...sourceColumn.items];\r\n    const destItems = [...destColumn.items];\r\n    const [removed] = sourceItems.splice(source.index, 1);\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      sourceItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...sourceColumn,\r\n          items: sourceItems,\r\n        },\r\n      });\r\n\r\n    } else {\r\n      destItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...sourceColumn,\r\n          items: sourceItems,\r\n        },\r\n        [destination.droppableId]: {\r\n          ...destColumn,\r\n          items: destItems,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(columns);\r\n  }, [columns]);\r\n  \r\n  return (\r\n    <div className='App'>\r\n    <h1>To-Do List</h1>\r\n      <SwitchButton path=\"dnd/\"/>\r\n      <div className=\"task-input\">\r\n        <form onSubmit={(e) => {e.preventDefault(); handleAddTask();}}>\r\n          <input\r\n            type=\"text\"\r\n            value={task}\r\n            onChange={(e) => setTask(e.target.value)}\r\n            placeholder=\"Add a new task\"\r\n          />\r\n          <button onClick={handleAddTask}>Add</button>\r\n        </form>\r\n      </div>\r\n         <div className=\"columns\">\r\n         <DragDropContext onDragEnd={onDragEnd}>\r\n           <div className=\"column\">\r\n             <h2>To Do</h2>\r\n             <Droppable droppableId=\"todo\">\r\n               {(provided) => (\r\n                <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {columns.todo.items.map((task, index) => (\r\n                    <Draggable key={task.text} draggableId={task.text} index={index}>\r\n                      {(provided) => (\r\n                        <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                          <TodoItemDnd task={task} index={index} />\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </ul>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n\r\n          {/* Done Column */}\r\n          <div className=\"column\">\r\n            <h2>inProgress</h2>\r\n            <Droppable droppableId=\"inProgress\">\r\n              {(provided) => (\r\n                <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {columns.inProgress.items.map((task, index) => (\r\n                    <Draggable key={task.text} draggableId={task.text} index={index}>\r\n                      {(provided) => (\r\n                        <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                          <TodoItemDnd task={task} index={index} />\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </ul>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n          <div className=\"column\">\r\n            <h2>Done</h2>\r\n            <Droppable droppableId=\"inProgress\">\r\n              {(provided) => (\r\n                <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {columns.inProgress.items.map((task, index) => (\r\n                    <Draggable key={task.text} draggableId={task.text} index={index}>\r\n                      {(provided) => (\r\n                        <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                          <TodoItemDnd task={task} index={index} />\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </ul>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n    );\r\n    \r\n  // return (\r\n  //   <div className=\"App\">\r\n  //     <h1>To-Do List</h1>\r\n  //     <SwitchButton path=\"/\" />\r\n  //     <div className=\"task-input\">\r\n  //       <form onSubmit={(e) => { e.preventDefault(); handleAddTask(); }}>\r\n  //         <input\r\n  //           type=\"text\"\r\n  //           value={task}\r\n  //           onChange={(e) => setTask(e.target.value)}\r\n  //           placeholder=\"Add a new task\"\r\n  //         />\r\n  //         <button onClick={handleAddTask}>Add</button>\r\n  //       </form>\r\n  //     </div>\r\n\r\n  //     <div className=\"columns\">\r\n  //       <DragDropContext onDragEnd={onDragEnd}>\r\n  //         <div className=\"column\">\r\n  //           <h2>To Do</h2>\r\n  //           <Droppable droppableId=\"todo\">\r\n  //             {(provided) => (\r\n  //               <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n  //                 {todoTasks.map((task, index) => (\r\n  //                   <Draggable key={task.text} draggableId={task.text} index={index}>\r\n  //                     {(provided) => (\r\n  //                       <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n  //                         <TodoItem\r\n  //                           task={task}\r\n  //                           index={index}\r\n  //                           tasks={tasks}\r\n  //                           setTasks={setTasks}\r\n  //                         />\r\n  //                       </div>\r\n  //                     )}\r\n  //                   </Draggable>\r\n  //                 ))}\r\n  //                 {provided.placeholder}\r\n  //               </ul>\r\n  //             )}\r\n  //           </Droppable>\r\n  //         </div>\r\n\r\n  //         {/* Done Column */}\r\n  //         <div className=\"column\">\r\n  //           <h2>inProgress</h2>\r\n  //           <Droppable droppableId=\"inProgress\">\r\n  //             {(provided) => (\r\n  //               <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n  //                 {doneTasks.map((task, index) => (\r\n  //                   <Draggable key={task.text} draggableId={task.text} index={index}>\r\n  //                     {(provided) => (\r\n  //                       <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n  //                         <TodoItem\r\n  //                           task={task}\r\n  //                           index={index}\r\n  //                           tasks={tasks}\r\n  //                           setTasks={setTasks}\r\n  //                         />\r\n  //                       </div>\r\n  //                     )}\r\n  //                   </Draggable>\r\n  //                 ))}\r\n  //                 {provided.placeholder}\r\n  //               </ul>\r\n  //             )}\r\n  //           </Droppable>\r\n  //         </div>\r\n\r\n  //         {/* Blocked Column\r\n  //         <div className=\"column\">\r\n  //           <h2>Blocked</h2>\r\n  //           <Droppable droppableId=\"blocked\">\r\n  //             {(provided) => (\r\n  //               <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n  //                 {blockedTasks.map((task, index) => (\r\n  //                   <Draggable key={task.text} draggableId={task.text} index={index}>\r\n  //                     {(provided) => (\r\n  //                       <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n  //                         <TodoItem\r\n  //                           task={task}\r\n  //                           index={index}\r\n  //                           tasks={tasks}\r\n  //                           setTasks={setTasks}\r\n  //                         />\r\n  //                       </div>\r\n  //                     )}\r\n  //                   </Draggable>\r\n  //                 ))}\r\n  //                 {provided.placeholder}\r\n  //               </ul>\r\n  //             )}\r\n  //           </Droppable>\r\n  //         </div> */}\r\n  //       </DragDropContext>\r\n  //     </div>\r\n  //   </div>\r\n  // );\r\n}\r\n\r\nexport default DndPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}