{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maxim\\\\Dropbox\\\\\\u041A\\u043E\\u043D\\u0441\\u043F\\u0435\\u043A\\u0442\\u044B\\\\\\u0420\\u041A\\u041F\\u041E\\\\\\u041B\\u0430\\u0431\\u044B\\\\\\u041B\\u0430\\u0431\\u04304\\\\todo\\\\src\\\\pages\\\\DndPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TodoItem from '../components/TodoItem';\nimport SwitchButton from '../components/SwitchButton';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DndPage() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState('');\n  const handleAddTask = () => {\n    if (task.trim()) {\n      setTasks([...tasks, {\n        text: task,\n        status: 'incomplete'\n      }]);\n      setTask('');\n    }\n  };\n  const handleDragEnd = result => {\n    const {\n      destination,\n      source\n    } = result;\n\n    // Если нет конечного положения или задача осталась на том же месте, выходим\n    if (!destination || destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    const updatedTasks = [...tasks];\n    const [movedTask] = updatedTasks.splice(source.index, 1);\n    movedTask.status = destination.droppableId; // Обновляем статус задачи на основе droppableId\n    updatedTasks.splice(destination.index, 0, movedTask);\n    setTasks(updatedTasks);\n  };\n  const filteredTasks = {\n    done: tasks.filter(task => task.status === 'done'),\n    incomplete: tasks.filter(task => task.status === 'incomplete'),\n    blocked: tasks.filter(task => task.status === 'blocked')\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n        path: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-input\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            handleAddTask();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: task,\n            onChange: e => setTask(e.target.value),\n            placeholder: \"Add a new task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddTask,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"done\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), filteredTasks.done.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: String(index),\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(TodoItem, {\n                  task: task,\n                  index: index,\n                  tasks: tasks,\n                  setTasks: setTasks\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 23\n              }, this)\n            }, task.text, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"incomplete\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Incomplete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), filteredTasks.incomplete.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: String(index),\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(TodoItem, {\n                  task: task,\n                  index: index,\n                  tasks: tasks,\n                  setTasks: setTasks\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this)\n            }, task.text, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"blocked\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Blocked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), filteredTasks.blocked.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: String(index),\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(TodoItem, {\n                  task: task,\n                  index: index,\n                  tasks: tasks,\n                  setTasks: setTasks\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 23\n              }, this)\n            }, task.text, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(DndPage, \"pA78OmIk8vrGIGNP3RwLyEUg+ME=\");\n_c = DndPage;\nexport default DndPage;\nvar _c;\n$RefreshReg$(_c, \"DndPage\");","map":{"version":3,"names":["React","useState","TodoItem","SwitchButton","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","DndPage","_s","tasks","setTasks","task","setTask","handleAddTask","trim","text","status","handleDragEnd","result","destination","source","droppableId","index","updatedTasks","movedTask","splice","filteredTasks","done","filter","incomplete","blocked","onDragEnd","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","onClick","provided","droppableProps","ref","innerRef","map","draggableId","String","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["C:/Users/Maxim/Dropbox/Конспекты/РКПО/Лабы/Лаба4/todo/src/pages/DndPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TodoItem from '../components/TodoItem';\r\nimport SwitchButton from '../components/SwitchButton';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nfunction DndPage() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [task, setTask] = useState('');\r\n\r\n  const handleAddTask = () => {\r\n    if (task.trim()) {\r\n      setTasks([...tasks, { text: task, status: 'incomplete' }]);\r\n      setTask('');\r\n    }\r\n  };\r\n\r\n  const handleDragEnd = (result) => {\r\n    const { destination, source } = result;\r\n    \r\n    // Если нет конечного положения или задача осталась на том же месте, выходим\r\n    if (!destination || (destination.droppableId === source.droppableId && destination.index === source.index)) {\r\n      return;\r\n    }\r\n\r\n    const updatedTasks = [...tasks];\r\n    const [movedTask] = updatedTasks.splice(source.index, 1);\r\n    movedTask.status = destination.droppableId; // Обновляем статус задачи на основе droppableId\r\n    updatedTasks.splice(destination.index, 0, movedTask);\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const filteredTasks = {\r\n    done: tasks.filter(task => task.status === 'done'),\r\n    incomplete: tasks.filter(task => task.status === 'incomplete'),\r\n    blocked: tasks.filter(task => task.status === 'blocked')\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={handleDragEnd}>\r\n      <div className=\"App\">\r\n        <h1>To-Do List</h1>\r\n        <SwitchButton path=\"/\" />\r\n        <div className=\"task-input\">\r\n          <form onSubmit={(e) => { e.preventDefault(); handleAddTask(); }}>\r\n            <input\r\n              type=\"text\"\r\n              value={task}\r\n              onChange={(e) => setTask(e.target.value)}\r\n              placeholder=\"Add a new task\"\r\n            />\r\n            <button onClick={handleAddTask}>Add</button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"columns\">\r\n          <Droppable droppableId=\"done\">\r\n            {(provided) => (\r\n              <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                <h2>Done</h2>\r\n                {filteredTasks.done.map((task, index) => (\r\n                  <Draggable key={task.text} draggableId={String(index)} index={index}>\r\n                    {(provided) => (\r\n                      <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <TodoItem task={task} index={index} tasks={tasks} setTasks={setTasks} />\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n\r\n          <Droppable droppableId=\"incomplete\">\r\n            {(provided) => (\r\n              <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                <h2>Incomplete</h2>\r\n                {filteredTasks.incomplete.map((task, index) => (\r\n                  <Draggable key={task.text} draggableId={String(index)} index={index}>\r\n                    {(provided) => (\r\n                      <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <TodoItem task={task} index={index} tasks={tasks} setTasks={setTasks} />\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n\r\n          <Droppable droppableId=\"blocked\">\r\n            {(provided) => (\r\n              <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                <h2>Blocked</h2>\r\n                {filteredTasks.blocked.map((task, index) => (\r\n                  <Draggable key={task.text} draggableId={String(index)} index={index}>\r\n                    {(provided) => (\r\n                      <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <TodoItem task={task} index={index} tasks={tasks} setTasks={setTasks} />\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n}\r\n\r\nexport default DndPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}